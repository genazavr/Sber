import 'package:flutter/material.dart';
import '../models/article_model.dart';
import 'article_screen.dart';
import 'quiz_screen.dart';
import 'quiz_history.dart';
import '../widgets/leaf_background.dart';

/// ======== –°–ü–ò–°–û–ö –ö–£–†–°–û–í ========
final List<Map<String, dynamic>> gardenCourses = [
  {
    'id': 'c1',
    'title': 'üå± –û—Å–Ω–æ–≤—ã —É—Ö–æ–¥–∞ –∑–∞ —Ä–∞—Å—Ç–µ–Ω–∏—è–º–∏',
    'subtitle': '–ü–æ–ª–∏–≤, —É–¥–æ–±—Ä–µ–Ω–∏—è –∏ –ø–µ—Ä–µ—Å–∞–¥–∫–∞ –≤ –¥–æ–º–∞—à–Ω–∏—Ö —É—Å–ª–æ–≤–∏—è—Ö',
    'icon': Icons.grass,
    'color': Colors.green,
    'content':
    '–ü–æ–ª–∏–≤ ‚Äî –≥–ª–∞–≤–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç —É—Ö–æ–¥–∞. –ü—Ä–æ–≤–µ—Ä—è–π –≤–ª–∞–∂–Ω–æ—Å—Ç—å –ø–æ—á–≤—ã, –Ω–µ –∑–∞–ª–∏–≤–∞–π. –í–µ—Å–Ω–æ–π –ø–µ—Ä–µ—Å–∞–∂–∏–≤–∞–π, –æ—Å–µ–Ω—å—é –ø–æ–¥–∫–∞—Ä–º–ª–∏–≤–∞–π. üåø',
  },
  {
    'id': 'c2',
    'title': 'üåç –≠–∫–æ–ª–æ–≥–∏—è –∏ –∑–∞–±–æ—Ç–∞ –æ –ø–ª–∞–Ω–µ—Ç–µ',
    'subtitle': '–ö–∞–∫ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –º—É—Å–æ—Ä –∏ —ç–∫–æ–Ω–æ–º–∏—Ç—å —Ä–µ—Å—É—Ä—Å—ã',
    'icon': Icons.eco,
    'color': Colors.teal,
    'content':
    '–ú–∞–ª–µ–Ω—å–∫–∏–µ —à–∞–≥–∏ –∏–º–µ—é—Ç –∑–Ω–∞—á–µ–Ω–∏–µ: —Å–æ—Ä—Ç–∏—Ä—É–π –æ—Ç—Ö–æ–¥—ã, –≤—ã–∫–ª—é—á–∞–π —Å–≤–µ—Ç, —ç–∫–æ–Ω–æ–º—å –≤–æ–¥—É. –≠—Ç–æ –≤–∫–ª–∞–¥ –≤ –±—É–¥—É—â–µ–µ –ø—Ä–∏—Ä–æ–¥—ã. üåé',
  },
  {
    'id': 'c3',
    'title': 'üí∞ –§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å',
    'subtitle': '–£—á–∏—Å—å –∫–æ–ø–∏—Ç—å –∏ —Ç—Ä–∞—Ç–∏—Ç—å —Ä–∞–∑—É–º–Ω–æ',
    'icon': Icons.savings,
    'color': Colors.amber,
    'content':
    '–î–µ–Ω—å–≥–∏ ‚Äî –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç, –∞ –Ω–µ —Ü–µ–ª—å. –ü–ª–∞–Ω–∏—Ä—É–π —Ä–∞—Å—Ö–æ–¥—ã, —Å—Ç–∞–≤—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Ü–µ–ª–∏ –∏ —É—á–∏—Å—å —É–ø—Ä–∞–≤–ª—è—Ç—å —Å–≤–æ–∏–º–∏ —Å–±–µ—Ä–µ–∂–µ–Ω–∏—è–º–∏. üí°',
  },
  {
    'id': 'c4',
    'title': 'üçè –ó–¥–æ—Ä–æ–≤–æ–µ –ø–∏—Ç–∞–Ω–∏–µ',
    'subtitle': '–ö–∞–∫ –≤—ã—Ä–∞—â–∏–≤–∞—Ç—å –∏ —É–ø–æ—Ç—Ä–µ–±–ª—è—Ç—å –ø–æ–ª–µ–∑–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã',
    'icon': Icons.local_florist,
    'color': Colors.orange,
    'content':
    '–û–≤–æ—â–∏ –∏ —Ñ—Ä—É–∫—Ç—ã ‚Äî –∏—Å—Ç–æ—á–Ω–∏–∫ —ç–Ω–µ—Ä–≥–∏–∏. –ù–∞—É—á–∏—Å—å –≤—ã—Ä–∞—â–∏–≤–∞—Ç—å, —Å–æ–±–∏—Ä–∞—Ç—å –∏ –≥–æ—Ç–æ–≤–∏—Ç—å –ø–æ–ª–µ–∑–Ω—ã–µ –±–ª—é–¥–∞. ü•ï',
  },
];

/// ======== –≠–ö–†–ê–ù –ö–£–†–°–û–í ========
class CoursesScreen extends StatelessWidget {
  const CoursesScreen({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.green.shade50,
      body: LeafBackground(
        offsetFactor: 1.1,
        waveSpeed: 0.7,
        moveDuration: const Duration(seconds: 5),
        child: SafeArea(
          child: Padding(
            padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 12),
            child: ListView(
              children: [
                // üîπ –ó–∞–≥–æ–ª–æ–≤–æ–∫
                const Row(
                  children: [
                    CircleAvatar(
                      radius: 22,
                      backgroundColor: Color(0xFFB9EAB1),
                      child: Icon(Icons.menu_book, color: Colors.white),
                    ),
                    SizedBox(width: 12),
                    Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        Text(
                          "–ö—É—Ä—Å—ã –∏ –æ–±—É—á–µ–Ω–∏–µ",
                          style: TextStyle(
                            fontSize: 20,
                            fontWeight: FontWeight.bold,
                            color: Color(0xFF1C1C1C),
                          ),
                        ),
                        Text(
                          "–£—á–∏—Å—å, —Ä–∞–∑–≤–∏–≤–∞–π—Å—è –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π üåø",
                          style: TextStyle(color: Colors.grey, fontSize: 14),
                        ),
                      ],
                    ),
                  ],
                ),
                const SizedBox(height: 22),

                // üîπ –†–∞–∑–¥–µ–ª "–ö—É—Ä—Å—ã"
                const Text(
                  'üìó –û–±—É—á–∞—é—â–∏–µ –∫—É—Ä—Å—ã',
                  style: TextStyle(
                    fontSize: 18,
                    fontWeight: FontWeight.bold,
                    color: Color(0xFF2F4F2F),
                  ),
                ),
                const SizedBox(height: 12),

                ...gardenCourses.map((c) => _CourseCard(course: c)),

                const SizedBox(height: 30),

                // üîπ –†–∞–∑–¥–µ–ª "–í–∏–∫—Ç–æ—Ä–∏–Ω—ã"
                const Text(
                  'üß© –í–∏–∫—Ç–æ—Ä–∏–Ω—ã',
                  style: TextStyle(
                    fontSize: 18,
                    fontWeight: FontWeight.bold,
                    color: Color(0xFF2F4F2F),
                  ),
                ),
                const SizedBox(height: 12),

                _QuizCard(
                  title: 'üåø –£—Ö–æ–¥ –∑–∞ —Ä–∞—Å—Ç–µ–Ω–∏—è–º–∏',
                  subtitle: '–ü—Ä–æ–≤–µ—Ä—å —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è –ø–æ –ø–æ–ª–∏–≤—É –∏ —É–¥–æ–±—Ä–µ–Ω–∏—è–º',
                  color: const Color(0xFF63D471),
                  quizId: 'agro',
                ),
                _QuizCard(
                  title: 'üåç –≠–∫–æ–ª–æ–≥–∏—è',
                  subtitle: '–ü—Ä–æ–≤–µ—Ä—å, –∫–∞–∫ —Ö–æ—Ä–æ—à–æ —Ç—ã –∑–∞–±–æ—Ç–∏—à—å—Å—è –æ –ø–ª–∞–Ω–µ—Ç–µ',
                  color: const Color(0xFF63D471),
                  quizId: 'eco',
                ),
                _QuizCard(
                  title: 'üí∞ –§–∏–Ω–∞–Ω—Å—ã',
                  subtitle: '–†–∞–∑–±–µ—Ä–∏—Å—å –≤ –æ—Å–Ω–æ–≤–∞—Ö —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç–∏',
                  color: const Color(0xFF63D471),
                  quizId: 'fin',
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }
}

/// ======== –ö–∞—Ä—Ç–æ—á–∫–∞ –∫—É—Ä—Å–∞ ========
class _CourseCard extends StatelessWidget {
  final Map<String, dynamic> course;
  const _CourseCard({required this.course});

  @override
  Widget build(BuildContext context) {
    return Container(
      margin: const EdgeInsets.only(bottom: 14),
      decoration: BoxDecoration(
        color: Colors.white.withOpacity(0.95),
        borderRadius: BorderRadius.circular(18),
        boxShadow: [
          BoxShadow(
            color: Colors.black.withOpacity(0.05),
            blurRadius: 10,
            offset: const Offset(0, 4),
          ),
        ],
      ),
      child: ListTile(
        leading: CircleAvatar(
          backgroundColor: course['color'].withOpacity(0.15),
          child: Icon(course['icon'], color: course['color']),
        ),
        title: Text(
          course['title'],
          style: const TextStyle(fontWeight: FontWeight.bold, fontSize: 16),
        ),
        subtitle: Padding(
          padding: const EdgeInsets.only(top: 4.0),
          child: Text(
            course['subtitle'],
            style: const TextStyle(color: Colors.black54),
          ),
        ),
        trailing: const Icon(
          Icons.arrow_forward_ios_rounded,
          color: Colors.green,
          size: 18,
        ),
        onTap: () {
          Navigator.push(
            context,
            MaterialPageRoute(
              builder: (_) => ArticleScreen(
                article: Article(
                  id: course['id'],
                  title: course['title'],
                  preview: course['subtitle'],
                  content: course['content'],
                  thumbnail: '',
                ),
              ),
            ),
          );
        },
      ),
    );
  }
}

/// ======== –ö–∞—Ä—Ç–æ—á–∫–∞ –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã ========
class _QuizCard extends StatelessWidget {
  final String title;
  final String subtitle;
  final String quizId;
  final Color color;

  const _QuizCard({
    required this.title,
    required this.subtitle,
    required this.quizId,
    required this.color,
  });

  @override
  Widget build(BuildContext context) {
    return Container(
      margin: const EdgeInsets.only(bottom: 14),
      padding: const EdgeInsets.all(16),
      decoration: BoxDecoration(
        color: Colors.white.withOpacity(0.95),
        borderRadius: BorderRadius.circular(18),
        boxShadow: [
          BoxShadow(
            color: Colors.black.withOpacity(0.05),
            blurRadius: 10,
            offset: const Offset(0, 4),
          ),
        ],
      ),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Text(title,
              style:
              const TextStyle(fontSize: 16, fontWeight: FontWeight.bold)),
          const SizedBox(height: 6),
          Text(subtitle, style: const TextStyle(color: Colors.black54)),
          const SizedBox(height: 12),
          Row(
            mainAxisAlignment: MainAxisAlignment.spaceBetween,
            children: [
              ElevatedButton(
                style: ElevatedButton.styleFrom(
                  backgroundColor: color,
                  foregroundColor: Colors.white,
                  padding:
                  const EdgeInsets.symmetric(horizontal: 22, vertical: 12),
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(12),
                  ),
                ),
                onPressed: () {
                  List<Map<String, dynamic>> selectedQuiz = [];
                  if (quizId == 'agro') selectedQuiz = agroQuiz;
                  if (quizId == 'eco') selectedQuiz = ecologyQuiz;
                  if (quizId == 'fin') selectedQuiz = financeQuiz;

                  Navigator.push(
                    context,
                    MaterialPageRoute(
                      builder: (_) => QuizScreen(
                        quizId: quizId,
                        title: title,
                        questions: selectedQuiz,
                      ),
                    ),
                  );
                },
                child: const Text('–ü—Ä–æ–π—Ç–∏'),
              ),
              IconButton(
                icon: const Icon(
                  Icons.history_rounded,
                  color: Colors.green,
                  size: 24,
                ),
                onPressed: () {
                  Navigator.push(
                    context,
                    MaterialPageRoute(
                      builder: (_) =>
                          QuizHistoryScreen(quizId: quizId, title: title),
                    ),
                  );
                },
              ),
            ],
          ),
        ],
      ),
    );
  }
}
