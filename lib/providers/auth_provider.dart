import 'package:flutter/material.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:firebase_database/firebase_database.dart';

class AuthProvider with ChangeNotifier {
  final FirebaseAuth _auth = FirebaseAuth.instance;

  User? get user => _auth.currentUser;
  bool get isAuthenticated => user != null;

  AuthProvider() {
    _auth.authStateChanges().listen((_) => notifyListeners());
  }

  /// üîπ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Ä–µ–±—ë–Ω–∫–∞ –∏–ª–∏ —Ä–æ–¥–∏—Ç–µ–ª—è)
  Future<UserCredential> signUp(
      String email, String password, String name, {required String role}) async {
    // –°–æ–∑–¥–∞—ë–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Firebase Auth
    final cred = await _auth.createUserWithEmailAndPassword(
      email: email,
      password: password,
    );

    final uid = cred.user!.uid;

    // ‚úÖ –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –≤ Realtime Database
    final userRef = FirebaseDatabase.instance.ref('users/$uid');

    final Map<String, dynamic> baseData = {
      'email': email,
      'name': name,
      'role': role,
      'score': 0.0,
      'balance': 0.0,
    };

    await userRef.set(baseData);

    // üîπ –ï—Å–ª–∏ —Ä–æ–¥–∏—Ç–µ–ª—å ‚Äî —Å–æ–∑–¥–∞—ë–º –æ—Ç–¥–µ–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–ª—è –±—É–¥—É—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö –¥–µ—Ç–µ–π
    if (role == 'parent') {
      await FirebaseDatabase.instance.ref('parents/$uid').set({
        'email': email,
        'name': name,
        'createdAt': DateTime.now().toIso8601String(),
        'children': {}, // —Å—é–¥–∞ –º–æ–∂–Ω–æ –ø–æ—Ç–æ–º –¥–æ–±–∞–≤–ª—è—Ç—å UID –¥–µ—Ç–µ–π
      });
    }

    return cred;
  }

  /// üîπ –í—Ö–æ–¥
  Future<UserCredential> signIn(String email, String password) async {
    return await _auth.signInWithEmailAndPassword(
        email: email, password: password);
  }

  /// üîπ –í—ã—Ö–æ–¥
  Future<void> signOut() async {
    await _auth.signOut();
    notifyListeners();
  }
}
